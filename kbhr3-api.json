{"openapi":"3.0.1","info":{"title":"OpenAPI definition","version":"v0"},"servers":[{"url":"http://localhost:8080","description":"Generated server url"}],"tags":[{"name":"Authentication","description":"JWT authentication endpoints"},{"name":"Database Testing","description":"Endpoints for testing database connectivity"},{"name":"Authentication Test","description":"Endpoints to test JWT authentication"},{"name":"URL Redirect","description":"Public URL redirection service"},{"name":"URL Management","description":"Protected endpoints for managing shortened URLs"}],"paths":{"/api/urls/{id}":{"get":{"tags":["URL Management"],"summary":"Get a URL by ID","description":"Returns a single URL if it belongs to the authenticated user.","operationId":"getUrl","parameters":[{"name":"id","in":"path","description":"URL ID to retrieve","required":true,"schema":{"type":"integer","format":"int64"},"example":1}],"responses":{"200":{"description":"URL retrieved successfully","content":{"*/*":{"schema":{"type":"object"}}}},"401":{"description":"Authentication required","content":{"*/*":{"schema":{"type":"object"}}}},"404":{"description":"URL not found or not owned by user","content":{"*/*":{"schema":{"type":"object"}}}}},"security":[{"Bearer Authentication":[]}]},"put":{"tags":["URL Management"],"summary":"Update a URL by ID","description":"Updates a URL (longUrl and notes only) if it belongs to the authenticated user. Cannot change shortUri or userId.","operationId":"updateUrl","parameters":[{"name":"id","in":"path","description":"URL ID to update","required":true,"schema":{"type":"integer","format":"int64"},"example":1}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Url"}}},"required":true},"responses":{"200":{"description":"URL updated successfully","content":{"*/*":{"schema":{"type":"object"}}}},"400":{"description":"Invalid input data","content":{"*/*":{"schema":{"type":"object"}}}},"401":{"description":"Authentication required","content":{"*/*":{"schema":{"type":"object"}}}},"404":{"description":"URL not found or not owned by user","content":{"*/*":{"schema":{"type":"object"}}}}},"security":[{"Bearer Authentication":[]}]},"delete":{"tags":["URL Management"],"summary":"Delete a URL by ID","description":"Deletes a URL if it belongs to the authenticated user. Returns 404 if URL not found or not owned by user.","operationId":"deleteUrl","parameters":[{"name":"id","in":"path","description":"URL ID to delete","required":true,"schema":{"type":"integer","format":"int64"},"example":1}],"responses":{"204":{"description":"URL deleted successfully","content":{"*/*":{"schema":{"type":"object"}}}},"401":{"description":"Authentication required","content":{"*/*":{"schema":{"type":"object"}}}},"404":{"description":"URL not found or not owned by user","content":{"*/*":{"schema":{"type":"object"}}}}},"security":[{"Bearer Authentication":[]}]}},"/api/urls":{"get":{"tags":["URL Management"],"summary":"Get user's URLs with pagination","description":"Returns a paginated list of URLs created by the authenticated user. Results are sorted by creation date (newest first) by default.","operationId":"getUserUrls","parameters":[{"name":"page","in":"query","description":"Page number (0-based)","required":false,"schema":{"type":"integer","format":"int32","default":0},"example":0},{"name":"size","in":"query","description":"Items per page (max 100)","required":false,"schema":{"type":"integer","format":"int32","default":10},"example":10},{"name":"sortBy","in":"query","description":"Field to sort by","required":false,"schema":{"type":"string","default":"created"},"example":"created"},{"name":"sortDir","in":"query","description":"Sort direction (asc/desc)","required":false,"schema":{"type":"string","default":"desc"},"example":"desc"}],"responses":{"200":{"description":"URLs retrieved successfully","content":{"*/*":{"schema":{"type":"object","additionalProperties":{"type":"object"}}}}},"400":{"description":"Invalid pagination parameters","content":{"*/*":{"schema":{"type":"object","additionalProperties":{"type":"object"}}}}},"401":{"description":"Authentication required","content":{"*/*":{"schema":{"type":"object","additionalProperties":{"type":"object"}}}}}},"security":[{"Bearer Authentication":[]}]},"post":{"tags":["URL Management"],"summary":"Create a new URL","description":"Creates a new URL with the provided shortUri and longUrl. ShortUri must be unique.","operationId":"createUrl","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Url"}}},"required":true},"responses":{"400":{"description":"Invalid input data or shortUri already exists","content":{"*/*":{"schema":{"type":"object"}}}},"201":{"description":"URL created successfully","content":{"*/*":{"schema":{"type":"object"}}}},"401":{"description":"Authentication required","content":{"*/*":{"schema":{"type":"object"}}}}},"security":[{"Bearer Authentication":[]}]}},"/api/auth/login":{"post":{"tags":["Authentication"],"summary":"User login","description":"Authenticate user and return JWT token","operationId":"login","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginRequest"}}},"required":true},"responses":{"400":{"description":"Invalid request format","content":{"*/*":{"schema":{"type":"object"}}}},"401":{"description":"Invalid credentials","content":{"*/*":{"schema":{"type":"object"}}}},"200":{"description":"Login successful","content":{"*/*":{"schema":{"$ref":"#/components/schemas/JwtResponse"}}}}}}},"/{shortUri}":{"get":{"tags":["URL Redirect"],"summary":"Redirect to long URL","description":"Redirects from short URI to the original long URL.","operationId":"redirectToLongUrl","parameters":[{"name":"shortUri","in":"path","description":"Short URI identifier","required":true,"schema":{"type":"string"},"example":"abc123"}],"responses":{"400":{"description":"Invalid target URL"},"308":{"description":"Permanent redirect to long URL"},"404":{"description":"Short URI not found"}}}},"/api/urls/simple":{"get":{"tags":["URL Management"],"summary":"Get user's URLs (simple list)","description":"Returns a simple list of URLs for debugging purposes.","operationId":"getUserUrlsSimple","responses":{"200":{"description":"OK","content":{"*/*":{"schema":{"type":"object"}}}}},"security":[{"Bearer Authentication":[]}]}},"/api/urls/count":{"get":{"tags":["URL Management"],"summary":"Get user's URL count","description":"Returns the total number of URLs created by the authenticated user.","operationId":"getUserUrlCount","responses":{"200":{"description":"Count retrieved successfully","content":{"*/*":{"schema":{"type":"object","additionalProperties":{"type":"object"}}}}},"401":{"description":"Authentication required","content":{"*/*":{"schema":{"type":"object","additionalProperties":{"type":"object"}}}}}},"security":[{"Bearer Authentication":[]}]}},"/api/test/public":{"get":{"tags":["Authentication Test"],"summary":"Test public endpoint","description":"Public endpoint that doesn't require authentication","operationId":"testPublicEndpoint","responses":{"200":{"description":"Always accessible","content":{"*/*":{"schema":{"type":"object","additionalProperties":{"type":"object"}}}}}}}},"/api/test/protected":{"get":{"tags":["Authentication Test"],"summary":"Test protected endpoint","description":"Returns user info if JWT token is valid. Requires authentication.","operationId":"testProtectedEndpoint","responses":{"401":{"description":"Authentication required - missing or invalid JWT token","content":{"*/*":{"schema":{"type":"object","additionalProperties":{"type":"object"}}}}},"403":{"description":"Access forbidden","content":{"*/*":{"schema":{"type":"object","additionalProperties":{"type":"object"}}}}},"200":{"description":"Authentication successful","content":{"*/*":{"schema":{"type":"object","additionalProperties":{"type":"object"}}}}}},"security":[{"Bearer Authentication":[]}]}},"/api/test/db-connection":{"get":{"tags":["Database Testing"],"summary":"Test database connection","description":"Verifies that the application can connect to the MySQL database","operationId":"testDatabaseConnection","responses":{"200":{"description":"Database connection successful","content":{"*/*":{"schema":{"type":"object","additionalProperties":{"type":"object"}}}}}}}}},"components":{"schemas":{"Url":{"required":["longUrl","shortUri"],"type":"object","properties":{"id":{"type":"integer","description":"Unique identifier for the URL","format":"int64","readOnly":true,"example":1},"userId":{"type":"integer","description":"ID of the user who created this URL","format":"int64","example":1},"longUrl":{"maxLength":255,"minLength":0,"type":"string","description":"The original long URL to be shortened","example":"https://www.example.com/very/long/path"},"shortUri":{"maxLength":20,"minLength":0,"type":"string","description":"The unique short URI identifier","example":"abc123"},"notes":{"maxLength":255,"minLength":0,"type":"string","description":"Optional notes about this URL","example":"Marketing campaign link"},"created":{"type":"string","description":"Timestamp when the URL was created","format":"date-time","readOnly":true}},"description":"URL entity representing a shortened URL"},"LoginRequest":{"required":["password","username"],"type":"object","properties":{"username":{"type":"string","description":"Username","example":"alvin1711"},"password":{"type":"string","description":"Password","example":"password123"}},"description":"Login request with user credentials"},"JwtResponse":{"type":"object","properties":{"token":{"type":"string","description":"JWT token for authentication","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."}},"description":"JWT authentication response"}}}}